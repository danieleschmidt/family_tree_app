# Development Dockerfile for Family Tree App

FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_CACHE_DIR=/opt/poetry/cache \
    POETRY_VENV_PATH=/opt/poetry/venv

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    libssl-dev \
    libffi-dev \
    zlib1g-dev \
    libjpeg-dev \
    libfreetype6-dev \
    liblcms2-dev \
    libwebp-dev \
    tcl8.6-dev \
    tk8.6-dev \
    python3-tk \
    gettext \
    redis-tools \
    postgresql-client \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=$USER_UID

RUN groupadd --gid $USER_GID $USERNAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 - \
    && ln -s $POETRY_HOME/bin/poetry /usr/local/bin/poetry

# Configure Poetry
RUN poetry config virtualenvs.create true \
    && poetry config virtualenvs.in-project false \
    && poetry config virtualenvs.path $POETRY_VENV_PATH \
    && poetry config cache-dir $POETRY_CACHE_DIR

# Set working directory
WORKDIR /workspace

# Copy Poetry files
COPY pyproject.toml poetry.lock ./

# Install Python dependencies
RUN poetry install --no-root --no-dev

# Create directories with proper permissions
RUN mkdir -p /workspace/logs /workspace/media /workspace/static /workspace/tmp \
    && chown -R $USERNAME:$USERNAME /workspace /opt/poetry

# Switch to non-root user
USER $USERNAME

# Set default command
CMD ["poetry", "run", "python", "source/manage.py", "runserver", "0.0.0.0:8000"]